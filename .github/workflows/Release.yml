name: Release

on:
  push:
    tags:
    - '*'
  pull_request:
    branches:
    - master

jobs:
  build-release:
    runs-on: windows-latest

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:
      - name: Setup Dalamud
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile ./latest.zip
          Expand-Archive -Path ./latest.zip ./dalamud
          
      - name: Checkout and initialise
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Restore project dependencies
        run: dotnet restore .\src\ --verbosity normal

      - name: publish
        run: dotnet publish .\src\ -o .\src\bin\Release\

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Profiteering-release-${{ github.sha }}
          path: |
            src/bin/Release
            !src/bin/Release/Profiteering

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Profiteering ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./src/bin/Release/Profiteering/latest.zip
          asset_name: latest.zip
          asset_content_type: application/zip
